name: Sign and Publish Helm Chart

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Install GPG
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: Import GPG private key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PK: ${{ secrets.GPG_PK }}
        run: |
          echo "$GPG_PK" | base64 -d | gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --import
          KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep '^sec' | awk '{print $2}' | head -n1 | cut -d'/' -f2 | tr -d '\r\n')
          echo "GPG_KEY_ID=$KEY_ID" >> $GITHUB_ENV

      - name: Configure Helm repo directory
        run: mkdir -p ./helm-repo

      - name: Extract chart version from Git tag
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          echo "TAG_VERSION=$TAG_VERSION"
          echo "CHART_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Update chart version
        run: |
          yq eval ".version = \"$CHART_VERSION\"" -i backstage-helm-chart/Chart.yaml
          echo "Chart.yaml version updated to $CHART_VERSION"
          cat backstage-helm-chart/Chart.yaml

      - name: Package and Sign Helm chart
        env:
          GPG_TTY: $(tty)
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_KEY_ID: ${{ env.GPG_KEY_ID }}
        run: |
          export GNUPGHOME="$(mktemp -d)"
          echo "$GPG_PK" | base64 -d | gpg --batch --yes --passphrase "$GPG_PASSPHRASE" --import
          helm package backstage-helm-chart \
            --destination ./helm-repo \
            --sign \
            --key "$GPG_KEY_ID" \
            --keyring "$GNUPGHOME/pubring.kbx"
          helm repo index ./helm-repo

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Push Helm Chart to OCI Registry (ArtifactHub-compatible)
        run: |
          CHART_PACKAGE=$(ls -t ./helm-repo/backstage-*.tgz | head -n 1)
          if [ -z "$CHART_PACKAGE" ]; then
            echo "Error: No Helm chart package (.tgz) found in ./helm-repo/."
            exit 1
          fi
          helm push "$CHART_PACKAGE" oci://ghcr.io/${{ github.repository_owner }}/helm-charts

      - name: Upload Helm repo as artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-repo
          path: ./helm-repo
